"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[7955],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,k=u["".concat(s,".").concat(m)]||u[m]||c[m]||o;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},80:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={},i="Installation",l={unversionedId:"docs/Installation",id:"docs/Installation",title:"Installation",description:"First, add Watermelon to your project:",source:"@site/docs/docs/Installation.md",sourceDirName:"docs",slug:"/docs/Installation",permalink:"/docs/Installation",draft:!1,editUrl:"https://github.com/nozbe/WatermelonDB/edit/master/docs-website/docs/docs/Installation.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Check out the README",permalink:"/docs/"},next:{title:"Setup",permalink:"/docs/Setup"}},s={},p=[{value:"React Native setup",id:"react-native-setup",level:2},{value:"iOS (React Native)",id:"ios-react-native",level:3},{value:"Android (React Native)",id:"android-react-native",level:3},{value:"Troubleshooting JSI issues",id:"troubleshooting-jsi-issues",level:4},{value:"Web setup",id:"web-setup",level:2},{value:"Windows (React Native)",id:"windows-react-native",level:2},{value:"NodeJS (SQLite) setup",id:"nodejs-sqlite-setup",level:2},{value:"Next steps",id:"next-steps",level:2}],d={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"installation"},"Installation"),(0,r.kt)("p",null,"First, add Watermelon to your project:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @nozbe/watermelondb\n\n# (or with npm:)\nnpm install @nozbe/watermelondb\n")),(0,r.kt)("h2",{id:"react-native-setup"},"React Native setup"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install the Babel plugin for decorators if you haven't already:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add --dev @babel/plugin-proposal-decorators\n\n# (or with npm:)\nnpm install -D @babel/plugin-proposal-decorators\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add ES6 decorators support to your ",(0,r.kt)("inlineCode",{parentName:"p"},".babelrc")," file:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "presets": ["module:metro-react-native-babel-preset"],\n  "plugins": [["@babel/plugin-proposal-decorators", { "legacy": true }]]\n}\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Set up your iOS or Android project \u2014 see instructions below"))),(0,r.kt)("h3",{id:"ios-react-native"},"iOS (React Native)"),(0,r.kt)("p",null,"At least Xcode 13.x and iOS 15 are recommended (earlier versions are not tested for compatibility)."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Set up Babel config in your project")),(0,r.kt)("p",{parentName:"li"},"See instructions above \u2b06\ufe0f")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Link WatermelonDB's native library (using CocoaPods)")),(0,r.kt)("p",{parentName:"li"},"Open your ",(0,r.kt)("inlineCode",{parentName:"p"},"Podfile")," and add this:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},"# Uncomment this line if you're not using auto-linking or if auto-linking causes trouble\n# pod 'WatermelonDB', path: '../node_modules/@nozbe/watermelondb'\n\n# WatermelonDB dependency, should not be needed on modern React Native\n# (please file an issue if this causes issues for you)\n# pod 'React-jsi', path: '../node_modules/react-native/ReactCommon/jsi', modular_headers: true\n\n# WatermelonDB dependency\npod 'simdjson', path: '../node_modules/@nozbe/simdjson', modular_headers: true\n")),(0,r.kt)("p",{parentName:"li"},"Make sure you run ",(0,r.kt)("inlineCode",{parentName:"p"},"pod install")," (or ",(0,r.kt)("inlineCode",{parentName:"p"},"bundle exec pod install"),") after updating ",(0,r.kt)("inlineCode",{parentName:"p"},"Podfile"),"."),(0,r.kt)("p",{parentName:"li"},"We highly recommend that you ",(0,r.kt)("em",{parentName:"p"},"do not")," use frameworks. If WatermelonDB fails to build in the frameworks mode for you, ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Nozbe/WatermelonDB/issues/1285#issuecomment-1381323060"},"use this workaround")," to force building it in static library mode."),(0,r.kt)("p",{parentName:"li"},"Manual (non-CocoaPods) linking is not supported."))),(0,r.kt)("h3",{id:"android-react-native"},"Android (React Native)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Set up Babel config in your project")),(0,r.kt)("p",null,"See instructions above \u2b06\ufe0f"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Linking Manually"),(0,r.kt)("p",null,"By default, React Native uses ",(0,r.kt)("strong",{parentName:"p"},"autolinking"),", and ",(0,r.kt)("strong",{parentName:"p"},"you don't need the steps below"),"! Only use this with old versions of React Native or if you opt out of autolinking."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"In ",(0,r.kt)("inlineCode",{parentName:"li"},"android/settings.gradle"),", add:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-gradle"},"include ':watermelondb'\nproject(':watermelondb').projectDir =\n    new File(rootProject.projectDir, '../node_modules/@nozbe/watermelondb/native/android')\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"In ",(0,r.kt)("inlineCode",{parentName:"li"},"android/app/build.gradle"),", add:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-gradle"},"// ...\ndependencies {\n    // ...\n    implementation project(':watermelondb')  // \u2b05\ufe0f This!\n}\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"And finally, in ",(0,r.kt)("inlineCode",{parentName:"li"},"android/app/src/main/java/{YOUR_APP_PACKAGE}/MainApplication.java"),", add:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// ...\nimport com.nozbe.watermelondb.WatermelonDBPackage; // \u2b05\ufe0f This!\n// ...\n@Override\nprotected List<ReactPackage> getPackages() {\n  return Arrays.<ReactPackage>asList(\n    new MainReactPackage(),\n    new WatermelonDBPackage() // \u2b05\ufe0f Here!\n  );\n}\n"))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Using with react-native-screens or react-native-gesture-handler"),"If you are using recent versions of react-native-screens or react-native-gesture-handler, you will need to set the kotlin version to 1.5.20 or above (see section above)"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Troubleshooting"),"If you get this error:",(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"Can't find variable: Symbol"))),(0,r.kt)("p",null,"You're using an ancient version of JSC. Install ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/react-community/jsc-android-buildscripts"},(0,r.kt)("inlineCode",{parentName:"a"},"jsc-android"))," or Hermes.")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"JSI Installation (Optional, recommended)"),(0,r.kt)("p",null,"To enable fast, highly performant, synchronous JSI operation on Android, you need to take a few\nadditional steps manually."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Make sure you have NDK installed (version ",(0,r.kt)("inlineCode",{parentName:"p"},"20.1.5948944")," has been tested to work when writing this guide)")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In ",(0,r.kt)("inlineCode",{parentName:"p"},"android/settings.gradle"),", add:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-gradle"},"include ':watermelondb-jsi'\nproject(':watermelondb-jsi').projectDir =\n    new File(rootProject.projectDir, '../node_modules/@nozbe/watermelondb/native/android-jsi')\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In ",(0,r.kt)("inlineCode",{parentName:"p"},"android/app/build.gradle"),", add:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-gradle"},"// ...\nandroid {\n  // ...\n  packagingOptions {\n     pickFirst '**/libc++_shared.so' // \u2b05\ufe0f This (if missing)\n  }\n}\n\ndependencies {\n    // ...\n    implementation project(':watermelondb-jsi') // \u2b05\ufe0f This!\n}\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"If you're using Proguard, in ",(0,r.kt)("inlineCode",{parentName:"p"},"android/app/proguard-rules.pro")," add:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"-keep class com.nozbe.watermelondb.** { *; }\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"And finally, in ",(0,r.kt)("inlineCode",{parentName:"p"},"android/app/src/main/java/{YOUR_APP_PACKAGE}/MainApplication.java"),", add:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// ...\nimport com.nozbe.watermelondb.jsi.WatermelonDBJSIPackage; // \u2b05\ufe0f This!\nimport com.facebook.react.bridge.JSIModulePackage; // \u2b05\ufe0f This!\n// ...\nprivate final ReactNativeHost mReactNativeHost =\n   new ReactNativeHost(this) {\n     // ...\n\n     @Override\n     protected JSIModulePackage getJSIModulePackage() {\n       return new WatermelonDBJSIPackage(); // \u2b05\ufe0f This!\n     }\n   }\n\n")),(0,r.kt)("p",{parentName:"li"},"or if you have ",(0,r.kt)("strong",{parentName:"p"},"multiple")," JSI Packages (for example, when using ",(0,r.kt)("inlineCode",{parentName:"p"},"reanimated"),"):"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// ...\nimport java.util.Arrays; // \u2b05\ufe0f This!\nimport com.facebook.react.bridge.JSIModuleSpec; // \u2b05\ufe0f This!\nimport com.facebook.react.bridge.JSIModulePackage; // \u2b05\ufe0f This!\nimport com.facebook.react.bridge.ReactApplicationContext; // \u2b05\ufe0f This!\nimport com.facebook.react.bridge.JavaScriptContextHolder; // \u2b05\ufe0f This!\nimport com.nozbe.watermelondb.jsi.WatermelonDBJSIPackage; // \u2b05\ufe0f This!\n// ...\nprivate final ReactNativeHost mReactNativeHost =\n   new ReactNativeHost(this) {\n     // ...\n\n     @Override\n     protected JSIModulePackage getJSIModulePackage() {\n       return new JSIModulePackage() {\n         @Override\n         public List<JSIModuleSpec> getJSIModules(\n           final ReactApplicationContext reactApplicationContext,\n           final JavaScriptContextHolder jsContext\n         ) {\n           List<JSIModuleSpec> modules = Arrays.asList();\n\n           modules.addAll(new WatermelonDBJSIPackage().getJSIModules(reactApplicationContext, jsContext)); // \u2b05\ufe0f This!\n           // \u2b05\ufe0f add more JSI packages here by conventions above, for example:\n           // modules.addAll(new ReanimatedJSIModulePackage().getJSIModules(reactApplicationContext, jsContext));\n\n           return modules;\n         }\n       };\n     }\n   }\n")))),(0,r.kt)("h4",{id:"troubleshooting-jsi-issues"},"Troubleshooting JSI issues"),(0,r.kt)("p",null,"If you see a crash at launch similar to this after updating React Native:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"signal 11 (SIGSEGV), code 2 (SEGV_ACCERR), fault addr 0x79193ac4a9\n(...)\nbacktrace:\n      (...)\n      watermelondb::createMethod(facebook::jsi::Runtime&, facebook::jsi::Object&, char const*, unsigned int, std::__ndk1::function<facebook::jsi::Value (facebook::jsi::Runtime&, facebook::jsi::Value const*)>)+88\n      watermelondb::Database::install(facebook::jsi::Runtime*)+96)\n      (...)\n")),(0,r.kt)("p",null,"\u2026 this is most likely due to broken ",(0,r.kt)("inlineCode",{parentName:"p"},"libc++_shared"),". Run ",(0,r.kt)("inlineCode",{parentName:"p"},"./gradlew clean")," from ",(0,r.kt)("inlineCode",{parentName:"p"},"native/android"),", then try again.")),(0,r.kt)("h2",{id:"web-setup"},"Web setup"),(0,r.kt)("p",null,"This guide assumes you use Webpack as your bundler."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"If you haven't already, install Babel plugins for decorators, static class properties, and async/await to get the most out of Watermelon. This assumes you use Babel 7 and already support ES6 syntax."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add --dev @babel/plugin-proposal-decorators\nyarn add --dev @babel/plugin-proposal-class-properties\nyarn add --dev @babel/plugin-transform-runtime\n\n# (or with npm:)\nnpm install -D @babel/plugin-proposal-decorators\nnpm install -D @babel/plugin-proposal-class-properties\nnpm install -D @babel/plugin-transform-runtime\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add ES7 support to your ",(0,r.kt)("inlineCode",{parentName:"p"},".babelrc")," file:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "plugins": [\n    ["@babel/plugin-proposal-decorators", { "legacy": true }],\n    ["@babel/plugin-proposal-class-properties", { "loose": true }],\n    [\n      "@babel/plugin-transform-runtime",\n      {\n        "helpers": true,\n        "regenerator": true\n      }\n    ]\n  ]\n}\n')))),(0,r.kt)("h2",{id:"windows-react-native"},"Windows (React Native)"),(0,r.kt)("p",null,"WatermelonDB has ",(0,r.kt)("strong",{parentName:"p"},"experimental")," support for ",(0,r.kt)("a",{parentName:"p",href:"https://microsoft.github.io/react-native-windows/"},"React Native Windows"),"."),(0,r.kt)("p",null,"To set up:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Set up Babel config in your project - See instructions above for all React Native platforms"),(0,r.kt)("li",{parentName:"ol"},"Run ",(0,r.kt)("inlineCode",{parentName:"li"},"npx react-native autolink-windows")," to perform autolinking. See section below if you don't use autolinking.")),(0,r.kt)("p",null,"Caveats to keep in mind about React Native Windows support:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Windows support is new and experimental"),(0,r.kt)("li",{parentName:"ul"},"Only JSI port is available, so you must initialize ",(0,r.kt)("inlineCode",{parentName:"li"},"SQLiteAdapter")," with ",(0,r.kt)("inlineCode",{parentName:"li"},"{ jsi: true }")),(0,r.kt)("li",{parentName:"ul"},"JSI means that Remote Debugging (WebDebugger) is not available. Use direct debugging."),(0,r.kt)("li",{parentName:"ul"},"Enable Hermes when using WatermelonDB on RNW. Chakra has not been tested and may not work."),(0,r.kt)("li",{parentName:"ul"},"Turbo Sync has not been implemented"),(0,r.kt)("li",{parentName:"ul"},"onDestroy event has not been implemented. This only causes issues if you need to reload JS bundle\nat runtime (other than in development).")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Linking Manually"),(0,r.kt)("p",null,"By default, React Native uses ",(0,r.kt)("strong",{parentName:"p"},"autolinking"),", and ",(0,r.kt)("strong",{parentName:"p"},"you don't need the steps below"),"!"),(0,r.kt)("p",null,"Follow ",(0,r.kt)("a",{parentName:"p",href:"https://microsoft.github.io/react-native-windows/docs/native-modules-using"},"instructions on React Native Windows website"),", noting that:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Path to vcxproj: ",(0,r.kt)("inlineCode",{parentName:"li"},"node_modules\\@nozbe\\watermelondb\\native\\windows\\WatermelonDB\\WatermelonDB.vcxproj")),(0,r.kt)("li",{parentName:"ul"},"Name of project to reference: ",(0,r.kt)("inlineCode",{parentName:"li"},"WatermelonDB")),(0,r.kt)("li",{parentName:"ul"},"Header for PCH: ",(0,r.kt)("inlineCode",{parentName:"li"},'#include "winrt/WatermelonDB.h"')),(0,r.kt)("li",{parentName:"ul"},"Package provider: ",(0,r.kt)("inlineCode",{parentName:"li"},"PackageProviders().Append(winrt::WatermelonDB::ReactPackageProvider());")))),(0,r.kt)("h2",{id:"nodejs-sqlite-setup"},"NodeJS (SQLite) setup"),(0,r.kt)("p",null,"You only need this if you want to use WatermelonDB in NodeJS with SQLite (e.g. for scripts that share code with your web/React Native app)"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/JoshuaWise/better-sqlite3"},"better-sqlite3")," peer dependency"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"yarn add --dev better-sqlite3\n\n# (or with npm:)\nnpm install -D better-sqlite3\n")))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"next-steps"},"Next steps"),(0,r.kt)("p",null,"\u27a1\ufe0f After Watermelon is installed, ",(0,r.kt)("a",{parentName:"p",href:"/docs/Setup"},(0,r.kt)("strong",{parentName:"a"},"set it up"))))}u.isMDXComponent=!0}}]);